{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","role","aria-label","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","onClick","whileHover","opacity","layout","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","inital","y","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.268be60c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>FireSnap <span role=\"img\" aria-label=\"fire-snaps\">🔥</span></h1>\r\n      <h2>Your Pictures</h2>\r\n      <p>Safely Store Those Beautiful Memories You Made.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title;","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\napiKey: \"AIzaSyBfS3YUeGBK8MTf5x_1dw-Ec2-7n1GWaeo\",\r\nauthDomain: \"firesnap-c63f1.firebaseapp.com\",\r\nprojectId: \"firesnap-c63f1\",\r\nstorageBucket: \"firesnap-c63f1.appspot.com\",\r\nmessagingSenderId: \"328813604281\",\r\nappId: \"1:328813604281:web:106fefd57bb0bbec499a68\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import {useState, useEffect} from 'react';\r\nimport {projectStorage, projectFirestore, timestamp} from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // references\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage); \r\n\r\n        }, (error) => {\r\n            setError(error);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({url, createdAt});\r\n            setUrl(url);\r\n        })\r\n    }, [file])\r\n\r\n    return { progress, error, url };\r\n}\r\n\r\nexport default useStorage;","import React, {useEffect} from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url, progress} = useStorage(file);\r\n\r\n    useEffect(() => {\r\n        if(url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\" initial={{width: 0}} animate={{width: progress + '%'}}></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, {useState} from 'react'\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpg', 'image/jpeg'];\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n\r\n        if(selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError(\"Please select an image file (png or jpg or jpeg)\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler}/>\r\n                <span className=\"span\">+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}\r\n                {file && <div>{file.name}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm\r\n","import {useState, useEffect} from 'react';\r\nimport {projectFirestore} from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach((doc) => {\r\n                    documents.push({...doc.data(), id: doc.id})\r\n                });\r\n                setDocs(documents);\r\n            });\r\n        \r\n        return () => unsub();\r\n\r\n    }, [collection])\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;\r\n","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const {docs} = useFirestore('images');\r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id} onClick={() => setSelectedImg(doc.url)} whileHover={{opacity: 1}} layout>\r\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        transition={{delay: 0.8}}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from 'react';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick} inital={{opacity: 0}} animate={{opacity: 1}}>\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\" initial={{y: \"-100vh\"}} animate={{y: 0}}/>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"lead\">Developed By Pravunath Singh With ❤️</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState} from 'react';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/> }\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}